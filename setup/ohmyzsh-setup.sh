#!/bin/zsh
# filepath: setup/ohmyzsh-setup.sh

# 启用错误中断和显示执行命令
set -e
set -o pipefail

# 引入颜色库
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
source "$SCRIPT_DIR/../lib/colors.sh"

# ===== Xcode CLI 工具安装 =====
install_xcode_cli() {
    print_header "步骤 0: 检查/安装 Xcode 命令行工具"
    
    if ! xcode-select -p &>/dev/null; then
        warning "正在安装 Xcode CLI 工具... 请在弹出的窗口中完成安装。"
        xcode-select --install
        
        # 使用固定的轮询间隔等待安装完成
        local wait_count=0
        local max_wait=60 # 最多等待 60 * 5 = 300 秒
        until xcode-select -p &>/dev/null; do
            info "等待 Xcode CLI 安装完成... (${wait_count}/${max_wait})"
            sleep 5
            ((wait_count++))
            [[ $wait_count -gt $max_wait ]] && log_fatal "安装超时，请手动执行: xcode-select --install"
        done
        
        # 验证编译器存在
        [[ -f /usr/bin/clang ]] || log_fatal "CLI 工具安装不完整"
    fi
    success "Xcode 命令行工具就绪"
}

# ===== Oh My Zsh 安装 =====
install_oh_my_zsh() {
    print_header "步骤 1: 安装 Oh My Zsh"
    
    OHMYZSH_DIR="${HOME}/.oh-my-zsh"
    if [ ! -d "${OHMYZSH_DIR}" ]; then
        info "正在安装 oh-my-zsh..."
        
        # 优先尝试 GitHub 官方源，失败则回退到 Gitee
        if ! git clone https://github.com/ohmyzsh/ohmyzsh.git "${OHMYZSH_DIR}"; then
            warning "GitHub 连接失败，改用 Gitee 镜像..."
            git clone https://gitee.com/mirrors/oh-my-zsh.git "${OHMYZSH_DIR}" || log_fatal "Oh My Zsh 安装失败"
        fi

        # 备份原有配置
        if [ -f "${HOME}/.zshrc" ]; then
            cp "${HOME}/.zshrc" "${HOME}/.zshrc.bak.$(date +%Y%m%d_%H%M%S)"
            warning "已备份原有配置到 ~/.zshrc.bak.*"
        fi

        # 应用基础配置模板
        cp "${OHMYZSH_DIR}/templates/zshrc.zsh-template" "${HOME}/.zshrc"
        success "Oh My Zsh 安装完成"
    else
        success "Oh My Zsh 已安装"
    fi
}

# ===== Powerlevel10k 主题安装 =====
install_p10k_theme() {
    print_header "步骤 2: 安装 Powerlevel10k 主题"
    
    P10K_DIR="${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k"
    
    # 清理旧版本以确保全新安装
    [ -d "${P10K_DIR}" ] && rm -rf "${P10K_DIR}"
    
    info "正在安装 powerlevel10k 主题..."
    if ! git clone --depth=1 https://github.com/romkatv/powerlevel10k.git "${P10K_DIR}"; then
        warning "GitHub 连接失败，改用 Gitee 镜像..."
        git clone --depth=1 https://gitee.com/romkatv/powerlevel10k.git "${P10K_DIR}" || log_fatal "Powerlevel10k 主题安装失败"
    fi
    success "Powerlevel10k 主题已安装"
}

# ===== 核心插件安装 =====
install_plugins() {
    print_header "步骤 3: 安装核心插件"
    
    ZSH_CUSTOM="${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}"
    
    # 插件安装函数
    _install_plugin() {
        local name="$1" repo_gh="$2" repo_ge="$3"
        local plugin_dir="${ZSH_CUSTOM}/plugins/${name}"
        if [ ! -d "${plugin_dir}" ]; then
            info "安装插件 ${name}..."
            if ! git clone --depth=1 "https://github.com/${repo_gh}.git" "${plugin_dir}"; then
                warning "GitHub 连接失败，改用 Gitee 镜像..."
                git clone --depth=1 "https://gitee.com/${repo_ge}.git" "${plugin_dir}" || warning "插件 ${name} 安装失败"
            fi
        fi
    }
    
    _install_plugin "zsh-syntax-highlighting" "zsh-users/zsh-syntax-highlighting" "mirrors/zsh-syntax-highlighting"
    _install_plugin "zsh-autosuggestions" "zsh-users/zsh-autosuggestions" "mirrors/zsh-autosuggestions"
    
    success "核心插件检查/安装完成"
}

# ===== .zshrc 配置文件更新 =====
update_zsh_config() {
    print_header "步骤 4: 更新 .zshrc 配置文件"

    local theme="powerlevel10k/powerlevel10k"
    # 定义一个固定的、完整的插件列表
    local plugins_str="git extract z colored-man-pages zsh-syntax-highlighting zsh-autosuggestions"
    
    # 使用一个标记来管理整个配置块
    local section="Oh My Zsh & P10k"
    local marker="# >>> ${section} (generated by script) >>>"
    local end_marker="# <<< ${section} (generated by script) <<<"

    # 1. 如果存在旧的配置块，先删除
    if grep -q "$marker" ~/.zshrc; then
        sed -i '' "/$marker/,/$end_marker/d" ~/.zshrc
    fi

    # 2. 如果存在旧的、非脚本管理的主题和插件行，注释掉它们以避免冲突
    sed -i '' -E 's/^ZSH_THEME=/# &/' ~/.zshrc
    sed -i '' -E 's/^plugins=\(.*\)/# &/' ~/.zshrc

    # 3. 追加新的、完整的配置块
    cat >> ~/.zshrc <<-EOF

$marker
# Oh My Zsh 主题
ZSH_THEME="${theme}"

# Oh My Zsh 插件
plugins=($plugins_str)

# Powerlevel10k 优化配置
# 禁用初次启动的配置向导
# POWERLEVEL9K_DISABLE_CONFIGURATION_WIZARD=true
# 提示符元素配置
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(dir vcs status)
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(time background_jobs)
POWERLEVEL9K_MODE='nerdfont-complete'
$end_marker
EOF
    success ".zshrc 配置已更新"
}

# ===== 字体安装 =====
install_fonts() {
    print_header "步骤 5: 安装 Powerline 字体"
    
    declare -A fonts=(
        ["MesloLGS NF Regular.ttf"]="https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Regular.ttf"
        ["MesloLGS NF Bold.ttf"]="https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold.ttf"
        ["MesloLGS NF Italic.ttf"]="https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Italic.ttf"
        ["MesloLGS NF Bold Italic.ttf"]="https://github.com/romkatv/powerlevel10k-media/raw/master/MesloLGS%20NF%20Bold%20Italic.ttf"
    )
    
    FONT_DIR="${HOME}/Library/Fonts"
    mkdir -p "${FONT_DIR}"
    
    for font in ${(k)fonts}; do
        if [ ! -f "${FONT_DIR}/${font}" ]; then
            info "下载字体: ${font}..."
            if ! curl -#L -o "${FONT_DIR}/${font}" "${fonts[$font]}"; then
                warning "字体 ${font} 下载失败！"
                info "请尝试手动从以下地址下载并放入 ~/Library/Fonts/ 目录："
                info "${fonts[$font]}"
            fi
        fi
    done
    
    # 刷新字体缓存
    sudo atsutil databases -remove &>/dev/null || true
    
    success "字体检查/安装完成"
}

# ===== 最终指引 =====
final_instructions() {
    print_header "🎉 配置完成！请按以下步骤操作"
    
    info "1. ${BOLD}设置终端字体:${NC}"
    info "   - iTerm2: Preferences → Profiles → Text → Font → 选择 $(highlight 'MesloLGS NF')"
    info "   - VSCode: 设置中搜索 $(highlight 'terminal.integrated.fontFamily') → 添加 $(highlight 'MesloLGS NF')"
    
    info "2. ${BOLD}运行主题配置向导:${NC}"
    info "   在终端中输入以下命令，根据个人喜好进行配置："
    print_code "p10k configure"
    
    info "3. ${BOLD}完全刷新 Shell:${NC}"
    info "   执行以下命令以加载所有新配置："
    print_code "exec zsh"
}

# ===== 主执行流程 =====
main() {
    install_xcode_cli
    install_oh_my_zsh
    install_p10k_theme
    install_plugins
    update_zsh_config
    install_fonts
    final_instructions
}

# 启动主流程
main